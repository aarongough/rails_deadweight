#!/usr/bin/env ruby

require File.dirname(__FILE__) + "/../lib/rails_deadweight.rb"

root_path = File.expand_path ARGV[0]

project_files = RailsDeadweight::ProjectCrawler.get_project_files(root_path)
routes_string = `cd #{root_path}; rake routes`

methods = RailsDeadweight::Parsers::MethodParser.get_defined_methods(project_files)
classes = RailsDeadweight::Parsers::ClassParser.get_defined_classes(project_files)

classes.map! do |klass|
  reference_count =  RailsDeadweight::Parsers::ClassParser.count_class_references(project_files, klass[:name])
  reference_count += RailsDeadweight::Parsers::RouteParser.count_routes_for_controller(routes_string, klass[:name])
  
  klass.merge({
    :reference_count => reference_count
  })
end

methods.map! do |method|
  reference_count =  RailsDeadweight::Parsers::MethodParser.count_method_calls_for(project_files, method[:name])
  reference_count += RailsDeadweight::Parsers::RouteParser.count_routes_for_action(routes_string, method[:name])
  
  method.merge({
    :reference_count => reference_count
  })
end

unused_classes = classes.select {|x| x[:reference_count] == 0 }
unused_methods = methods.select {|x| x[:reference_count] == 0 }

puts unused_classes.map {|x| x[:name]}
puts
puts unused_methods.map {|x| x[:name]}
